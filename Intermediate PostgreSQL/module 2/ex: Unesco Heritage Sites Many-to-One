DROP TABLE IF EXISTS unesco_raw;
CREATE TABLE unesco_raw (
    name TEXT,
    description TEXT,
    justification TEXT,
    year INTEGER,
    longitude FLOAT,
    latitude FLOAT,
    area_hectares FLOAT,
    category TEXT,
    state TEXT,
    region TEXT,
    iso TEXT
);

CREATE TABLE category (
    id SERIAL PRIMARY KEY,
    name VARCHAR(128) UNIQUE
);

CREATE TABLE state (
    id SERIAL PRIMARY KEY,
    name VARCHAR(128) UNIQUE
);

CREATE TABLE region (
    id SERIAL PRIMARY KEY,
    name VARCHAR(128) UNIQUE
);

CREATE TABLE iso (
    id SERIAL PRIMARY KEY,
    name VARCHAR(128) UNIQUE
);

CREATE TABLE unesco (
    id SERIAL PRIMARY KEY,
    name TEXT,
    description TEXT,
    justification TEXT,
    year INTEGER,
    longitude FLOAT,
    latitude FLOAT,
    area_hectares FLOAT,
    category_id INTEGER REFERENCES category(id),
    state_id INTEGER REFERENCES state(id),
    region_id INTEGER REFERENCES region(id),
    iso_id INTEGER REFERENCES iso(id)
);


\copy unesco_raw(name, description, justification, year, longitude, latitude, area_hectares, category, state, region, iso) FROM '/Users/admin_91/Downloads/whc-sites-2018-small.csv' DELIMITER ',' CSV HEADER;


ALTER TABLE unesco_raw
ADD COLUMN category_id INTEGER,
ADD COLUMN state_id INTEGER,
ADD COLUMN region_id INTEGER,
ADD COLUMN iso_id INTEGER;


UPDATE unesco_raw
SET category_id = category.id
FROM category
WHERE unesco_raw.category = category.name;

UPDATE unesco_raw
SET state_id = state.id
FROM state
WHERE unesco_raw.state = state.name;

UPDATE unesco_raw
SET region_id = region.id
FROM region
WHERE unesco_raw.region = region.name;

UPDATE unesco_raw
SET iso_id = iso.id
FROM iso
WHERE unesco_raw.iso = iso.name;


INSERT INTO unesco (name, description, justification, year, longitude, latitude, area_hectares, category_id, state_id, region_id, iso_id)
SELECT name, description, justification, year, longitude, latitude, area_hectares, category_id, state_id, region_id, iso_id
FROM unesco_raw;


SELECT unesco.name, unesco.year, category.name AS category, state.name AS state, region.name AS region, iso.name AS iso
FROM unesco
JOIN category ON unesco.category_id = category.id
JOIN state ON unesco.state_id = state.id
JOIN region ON unesco.region_id = region.id
JOIN iso ON unesco.iso_id = iso.id
ORDER BY iso.name, unesco.name
LIMIT 3;
